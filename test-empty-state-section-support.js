/**\n * @file test-empty-state-section-support.js\n * @description Test script for empty state section support\n * \n * TESTS:\n * - Add Section buttons are present and functional\n * - Empty state disappears when section is added\n * - Template logic considers both components and sections\n * - Section creation from empty state works properly\n */\n\n(function() {\n    'use strict';\n    \n    const testEmptyStateSectionSupport = () => {\n        console.group('🏗️ EMPTY STATE SECTION SUPPORT TEST');\n        \n        // 1. Check if Add Section buttons exist\n        const addSectionBtn1 = document.getElementById('add-first-section');\n        const addSectionBtn2 = document.getElementById('add-first-section-2');\n        \n        console.log('📋 ADD SECTION BUTTONS:');\n        console.log('  add-first-section:', {\n            exists: !!addSectionBtn1,\n            visible: addSectionBtn1 ? addSectionBtn1.offsetParent !== null : false,\n            hasHandler: addSectionBtn1 ? addSectionBtn1.onclick !== null : false\n        });\n        \n        console.log('  add-first-section-2:', {\n            exists: !!addSectionBtn2,\n            visible: addSectionBtn2 ? addSectionBtn2.offsetParent !== null : false,\n            hasHandler: addSectionBtn2 ? addSectionBtn2.onclick !== null : false\n        });\n        \n        // 2. Check empty state handlers\n        if (window.emptyStateHandlers) {\n            const status = window.emptyStateHandlers.getStatus();\n            console.log('🎛️ EMPTY STATE HANDLERS:', {\n                initialized: status.isInitialized,\n                hasAddSectionButtons: status.activeButtons.includes('add-first-section') || status.activeButtons.includes('add-first-section-2'),\n                activeButtons: status.activeButtons\n            });\n        } else {\n            console.log('❌ Empty state handlers not available');\n        }\n        \n        // 3. Check section system availability\n        console.log('🏗️ SECTION SYSTEM AVAILABILITY:');\n        console.log('  SectionLayoutManager:', !!window.SectionLayoutManager);\n        console.log('  sidebarSectionIntegration:', !!window.sidebarSectionIntegration);\n        console.log('  SectionRenderer:', !!window.SectionRenderer);\n        \n        // 4. Check current state\n        if (window.enhancedStateManager) {\n            const state = window.enhancedStateManager.getState();\n            const componentCount = Object.keys(state.components || {}).length;\n            const sectionCount = Array.isArray(state.sections) ? state.sections.length : 0;\n            const hasContent = componentCount > 0 || sectionCount > 0;\n            \n            console.log('📊 CURRENT STATE:');\n            console.log('  Components:', componentCount);\n            console.log('  Sections:', sectionCount);\n            console.log('  Has content:', hasContent);\n        } else {\n            console.log('❌ State manager not available');\n        }\n        \n        // 5. Check container visibility\n        const emptyState = document.getElementById('empty-state');\n        const savedContainer = document.getElementById('saved-components-container');\n        \n        console.log('📦 CONTAINER VISIBILITY:');\n        console.log('  empty-state visible:', emptyState ? emptyState.style.display !== 'none' : false);\n        console.log('  saved-components-container visible:', savedContainer ? savedContainer.style.display !== 'none' : false);\n        \n        // 6. Check existing sections in DOM\n        const sectionsInDOM = document.querySelectorAll('[data-section-id]');\n        console.log('🎨 SECTIONS IN DOM:');\n        console.log('  Section count:', sectionsInDOM.length);\n        sectionsInDOM.forEach((section, index) => {\n            console.log(`  ${index + 1}. ID: ${section.dataset.sectionId}, Type: ${section.dataset.sectionType}`);\n        });\n        \n        console.groupEnd();\n        \n        // Summary\n        const hasAddSectionButtons = !!(addSectionBtn1 || addSectionBtn2);\n        const sectionSystemReady = !!(window.SectionLayoutManager && window.sidebarSectionIntegration);\n        const emptyStateReady = !!(window.emptyStateHandlers && window.emptyStateHandlers.getStatus().isInitialized);\n        \n        console.log('\\n📋 EMPTY STATE SECTION SUPPORT SUMMARY:');\n        console.log(`Add Section buttons: ${hasAddSectionButtons ? '✅' : '❌'}`);\n        console.log(`Section system ready: ${sectionSystemReady ? '✅' : '❌'}`);\n        console.log(`Empty state handlers: ${emptyStateReady ? '✅' : '❌'}`);\n        console.log(`Ready to create sections: ${hasAddSectionButtons && sectionSystemReady && emptyStateReady ? '✅' : '❌'}`);\n    };\n    \n    // Test section creation\n    const testSectionCreation = () => {\n        console.group('🧪 SECTION CREATION TEST');\n        \n        if (!window.emptyStateHandlers) {\n            console.log('❌ Empty state handlers not available');\n            console.groupEnd();\n            return;\n        }\n        \n        if (!window.SectionLayoutManager || !window.sidebarSectionIntegration) {\n            console.log('❌ Section system not available');\n            console.groupEnd();\n            return;\n        }\n        \n        // Simulate section creation\n        try {\n            console.log('🔄 Simulating section creation...');\n            \n            const sectionType = 'full_width';\n            const sectionId = `test_section_${Date.now()}`;\n            \n            // Check which creation method is available\n            if (window.sidebarSectionIntegration && typeof window.sidebarSectionIntegration.createSection === 'function') {\n                console.log('✅ Using sidebarSectionIntegration.createSection');\n                const success = window.sidebarSectionIntegration.createSection(sectionType, sectionId);\n                console.log(`Section creation result: ${success ? '✅' : '❌'}`);\n            } else if (window.SectionLayoutManager && typeof window.SectionLayoutManager.createSection === 'function') {\n                console.log('✅ Using SectionLayoutManager.createSection (fallback)');\n                const sectionConfig = {\n                    id: sectionId,\n                    type: sectionType,\n                    layout: {\n                        width: 'full_width',\n                        padding: '40px 20px',\n                        maxWidth: '100%'\n                    }\n                };\n                const success = window.SectionLayoutManager.createSection(sectionConfig);\n                console.log(`Section creation result: ${success ? '✅' : '❌'}`);\n            } else {\n                console.log('❌ No section creation method available');\n            }\n            \n        } catch (error) {\n            console.log('❌ Section creation test failed:', error);\n        }\n        \n        console.groupEnd();\n    };\n    \n    // Auto-run when DOM is ready\n    if (document.readyState === 'loading') {\n        document.addEventListener('DOMContentLoaded', () => {\n            setTimeout(testEmptyStateSectionSupport, 1000); // Wait for systems to initialize\n        });\n    } else {\n        setTimeout(testEmptyStateSectionSupport, 100);\n    }\n    \n    // Make functions available globally\n    window.testEmptyStateSectionSupport = testEmptyStateSectionSupport;\n    window.testSectionCreation = testSectionCreation;\n    \n    // Quick test function\n    window.quickSectionTest = () => {\n        const hasButtons = !!(document.getElementById('add-first-section') || document.getElementById('add-first-section-2'));\n        const hasSystem = !!(window.SectionLayoutManager && window.sidebarSectionIntegration);\n        const hasHandlers = !!(window.emptyStateHandlers && window.emptyStateHandlers.getStatus().isInitialized);\n        \n        console.log(`🔍 Quick Section Test: Buttons(${hasButtons}) System(${hasSystem}) Handlers(${hasHandlers})`);\n        \n        return hasButtons && hasSystem && hasHandlers;\n    };\n    \n})();\n\n// Helper function to manually trigger section creation\nwindow.createTestSection = () => {\n    const addSectionBtn = document.getElementById('add-first-section') || document.getElementById('add-first-section-2');\n    if (addSectionBtn) {\n        addSectionBtn.click();\n        console.log('🔄 Triggered section creation via button click');\n    } else {\n        console.log('❌ No Add Section button found');\n    }\n};\n