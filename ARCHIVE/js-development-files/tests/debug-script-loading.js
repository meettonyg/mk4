/**\n * @file debug-script-loading.js\n * @description Emergency debugging script for GMKB loading issues\n * @version 1.0.0\n * \n * ROOT FIX EMERGENCY DEBUGGING:\n * Run this script in the browser console to diagnose script loading issues\n */\n\n(function() {\n    'use strict';\n    \n    console.log('🚨 ROOT FIX EMERGENCY DEBUGGING: Diagnosing script loading issues...');\n    \n    /**\n     * Check if scripts are present in DOM\n     */\n    function checkScriptElements() {\n        console.log('\\n📋 Checking script elements in DOM:');\n        \n        const expectedScripts = [\n            'gmkb-main',\n            'gmkb-system-initializer', \n            'guestify-core-systems-bundle',\n            'guestify-application-bundle',\n            'guestify-topics-component',\n            'guestify-topics-panel'\n        ];\n        \n        expectedScripts.forEach(handle => {\n            const scriptEl = document.querySelector(`script[src*=\"${handle}\"]`);\n            if (scriptEl) {\n                console.log(`✅ ${handle}: Found`);\n                console.log(`   URL: ${scriptEl.src}`);\n                console.log(`   Loaded: ${scriptEl.readyState || 'unknown'}`);\n            } else {\n                console.log(`❌ ${handle}: Missing from DOM`);\n            }\n        });\n    }\n    \n    /**\n     * Check global namespace status\n     */\n    function checkNamespaces() {\n        console.log('\\n🔍 Checking global namespaces:');\n        \n        const checks = [\n            { name: 'window.GMKB', value: window.GMKB },\n            { name: 'window.gmkbCoreReady', value: window.gmkbCoreReady },\n            { name: 'window.gmkbInitTime', value: window.gmkbInitTime },\n            { name: 'window.GMKB?.initializer', value: window.GMKB?.initializer },\n            { name: 'window.GMKB?.ready', value: window.GMKB?.ready },\n            { name: 'window.GMKB?.dispatch', value: window.GMKB?.dispatch },\n            { name: 'window.stateManager', value: window.stateManager },\n            { name: 'window.renderer', value: window.renderer }\n        ];\n        \n        checks.forEach(check => {\n            const status = check.value !== undefined ? '✅' : '❌';\n            const type = typeof check.value;\n            console.log(`${status} ${check.name}: ${type}`);\n        });\n    }\n    \n    /**\n     * Test manual script loading\n     */\n    function testManualScriptLoading() {\n        console.log('\\n⚡ Testing manual script loading:');\n        \n        // Try to determine plugin URL\n        const existingScript = document.querySelector('script[src*=\"guestify\"]');\n        if (!existingScript) {\n            console.log('❌ Cannot find any guestify scripts to determine plugin URL');\n            return;\n        }\n        \n        const pluginUrl = existingScript.src.split('/js/')[0] + '/js/';\n        console.log('🔗 Plugin URL detected:', pluginUrl);\n        \n        // Test loading gmkb-main.js manually\n        const testScript = document.createElement('script');\n        testScript.src = pluginUrl + 'core/gmkb-main.js?test=' + Date.now();\n        testScript.onload = () => {\n            console.log('✅ Manual script load successful');\n            setTimeout(() => {\n                console.log('🔍 After manual load - window.GMKB:', typeof window.GMKB);\n            }, 100);\n        };\n        testScript.onerror = (error) => {\n            console.log('❌ Manual script load failed:', error);\n        };\n        \n        document.head.appendChild(testScript);\n        console.log('🚀 Manual script loading initiated...');\n    }\n    \n    /**\n     * Check WordPress localized data\n     */\n    function checkWordPressData() {\n        console.log('\\n📊 Checking WordPress localized data:');\n        \n        const dataObjects = ['guestifyData', 'guestifyMediaKit', 'gmkbValidationData'];\n        \n        dataObjects.forEach(objName => {\n            if (window[objName]) {\n                console.log(`✅ ${objName}:`, window[objName]);\n            } else {\n                console.log(`❌ ${objName}: Missing`);\n            }\n        });\n    }\n    \n    /**\n     * Run network checks\n     */\n    function checkNetworkStatus() {\n        console.log('\\n🌐 Network status:');\n        console.log('Navigator online:', navigator.onLine);\n        console.log('Document readyState:', document.readyState);\n        console.log('Page URL:', window.location.href);\n    }\n    \n    /**\n     * Main diagnostic function\n     */\n    function runComprehensiveDiagnostics() {\n        console.group('🚨 ROOT FIX EMERGENCY DIAGNOSTICS');\n        \n        checkNetworkStatus();\n        checkScriptElements();\n        checkNamespaces();\n        checkWordPressData();\n        \n        console.log('\\n💡 Next steps:');\n        console.log('1. Check browser Network tab for failed script loads');\n        console.log('2. Look for JavaScript errors in Console');\n        console.log('3. Run testManualScriptLoading() to test direct loading');\n        console.log('4. Check WordPress debug.log for PHP errors');\n        \n        console.groupEnd();\n    }\n    \n    // Expose functions globally for manual testing\n    window.debugScriptLoading = {\n        runDiagnostics: runComprehensiveDiagnostics,\n        checkScripts: checkScriptElements,\n        checkNamespaces: checkNamespaces,\n        testManualLoading: testManualScriptLoading,\n        checkWordPressData: checkWordPressData\n    };\n    \n    // Auto-run diagnostics\n    if (document.readyState === 'complete') {\n        setTimeout(runComprehensiveDiagnostics, 1000);\n    } else {\n        document.addEventListener('DOMContentLoaded', () => {\n            setTimeout(runComprehensiveDiagnostics, 1000);\n        });\n    }\n    \n    console.log('🔧 Emergency debugging loaded. Use window.debugScriptLoading methods for manual testing.');\n    \n})();\n