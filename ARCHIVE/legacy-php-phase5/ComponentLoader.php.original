<?php
/**
 * Component Loader - LEGACY VERSION (Phase 4)
 * 
 * This file has been archived as part of Phase 5: Remove Legacy Systems
 * 
 * ARCHIVED DATE: 2025-01-29
 * REASON: PHP rendering deprecated in favor of pure Vue architecture
 * 
 * This file contains the ORIGINAL ComponentLoader with PHP rendering capabilities.
 * In Phase 5, the purpose changed from "rendering" to "metadata only".
 * 
 * WHAT THIS FILE DID:
 * - Loaded PHP template files and rendered HTML server-side
 * - Returned rendered HTML strings to be injected by Vue
 * - Caused race conditions between PHP and Vue rendering
 * 
 * REPLACEMENT:
 * - Vue components now handle all rendering client-side
 * - ComponentLoader refactored to provide metadata only
 * - REST API v2 provides data, Vue renders UI
 * 
 * ROLLBACK:
 * If you need to restore PHP rendering, copy this file back to:
 * system/ComponentLoader.php
 */

class ComponentLoader {
    private $componentsDir;
    private $loadedComponents = [];
    private $discovery;

    public function __construct($componentsDir, ComponentDiscovery $discovery) {
        $this->componentsDir = $componentsDir;
        $this->discovery = $discovery;
    }
    
    // ... (rest of the file content would be here)
    // This is a placeholder showing this is the archived version
    
    /**
     * LEGACY: Load and render a component (PHP rendering)
     * 
     * THIS METHOD IS DEPRECATED IN PHASE 5
     * Replaced by: Vue client-side rendering
     */
    public function loadComponent($componentName, $props = []) {
        // PHP template rendering logic was here
        // Now deprecated in favor of Vue rendering
    }
    
    /**
     * LEGACY: Load and render design panel (PHP rendering)
     * 
     * THIS METHOD IS DEPRECATED IN PHASE 5  
     * Replaced by: Vue design panel components
     */
    public function loadDesignPanel($componentName) {
        // PHP panel rendering logic was here
        // Now deprecated in favor of Vue design panels
    }
}
