/**\n * Quick test script to verify the controls preservation fix\n */\n\n(function() {\n    'use strict';\n    \n    console.group('%cüîÑ TESTING CONTROLS PRESERVATION FIX', 'font-size: 16px; font-weight: bold; color: #10b981; background: #ecfdf5; padding: 4px 8px; border-radius: 4px;');\n    \n    function testControlsPreservation() {\n        console.log('üß™ Testing controls preservation during re-render...');\n        \n        // First, let's manually attach controls and see if they persist\n        document.querySelectorAll('[data-component-id]').forEach((comp, i) => {\n            const id = comp.getAttribute('data-component-id');\n            console.log(`\\nüéØ Testing component ${i+1}: ${id}`);\n            \n            // Clear any existing tracker data to force fresh attachment\n            if (window.componentControlsManager.attachedControls.has(id)) {\n                console.log('  üìã Clearing existing tracker data');\n                window.componentControlsManager.attachedControls.delete(id);\n            }\n            \n            // Remove any existing controls\n            const existing = comp.querySelector('.component-controls');\n            if (existing) {\n                existing.remove();\n                console.log('  üóëÔ∏è Removed existing controls');\n            }\n            \n            // Attach fresh controls\n            console.log('  üîß Attaching fresh controls...');\n            const success = window.componentControlsManager.attachControls(comp, id);\n            console.log(`  ${success ? '‚úÖ' : '‚ùå'} Attachment result: ${success}`);\n            \n            // Check if controls are now visible\n            const newControls = comp.querySelector('.component-controls');\n            console.log(`  üëÅÔ∏è Controls visible in DOM: ${!!newControls}`);\n            \n            if (newControls) {\n                // Force visibility for testing\n                newControls.style.opacity = '1';\n                newControls.style.visibility = 'visible';\n                newControls.style.background = 'rgba(0, 150, 0, 0.8)';\n                console.log('  üé® Forced controls visible for testing');\n            }\n        });\n    }\n    \n    function clearAllTrackers() {\n        console.log('üßπ Clearing all ComponentControlsManager trackers...');\n        window.componentControlsManager.attachedControls.clear();\n        window.componentControlsManager.eventListeners.clear();\n        console.log('‚úÖ All trackers cleared');\n    }\n    \n    function forceReattachAll() {\n        console.log('üîÑ Force re-attaching controls to all components...');\n        \n        clearAllTrackers();\n        \n        document.querySelectorAll('[data-component-id]').forEach((comp) => {\n            const id = comp.getAttribute('data-component-id');\n            \n            // Remove any existing controls\n            const existing = comp.querySelector('.component-controls');\n            if (existing) existing.remove();\n            \n            // Force reattachment\n            const success = window.componentControlsManager.attachControls(comp, id);\n            console.log(`üîß Re-attached to ${id}: ${success}`);\n        });\n    }\n    \n    // Export functions\n    window.testControlsPreservation = {\n        testControlsPreservation,\n        clearAllTrackers,\n        forceReattachAll\n    };\n    \n    // Auto-run test\n    setTimeout(() => {\n        console.log('\\n‚è∞ Auto-running controls preservation test...');\n        testControlsPreservation();\n    }, 2000);\n    \n    console.log('\\nüí° Test Commands Available:');\n    console.log('   testControlsPreservation.testControlsPreservation() - Test preservation');\n    console.log('   testControlsPreservation.clearAllTrackers() - Clear all trackers');\n    console.log('   testControlsPreservation.forceReattachAll() - Force reattach all');\n    \n    console.groupEnd();\n    \n})();