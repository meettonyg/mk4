/**
 * Quick fix for save failures in Media Kit Builder
 * Run this directly in your browser console to fix the save issue
 */

(function() {
    console.log('üîß Applying Media Kit Save Fix...');
    
    // Get mkcg_id from URL
    const urlParams = new URLSearchParams(window.location.search);
    const mkcgId = urlParams.get('mkcg_id');
    
    if (!mkcgId) {
        console.error('‚ùå No mkcg_id found in URL. Cannot fix save.');
        return;
    }
    
    const postId = parseInt(mkcgId);
    console.log('‚úÖ Found mkcg_id:', postId);
    
    // Fix gmkbData
    if (typeof gmkbData !== 'undefined') {
        gmkbData.postId = postId;
        gmkbData.post_id = postId;
        gmkbData.mkcg_id = postId;
        console.log('‚úÖ Updated gmkbData with post ID');
    } else {
        console.warn('‚ö†Ô∏è gmkbData not found - creating it');
        window.gmkbData = {
            ajaxUrl: '/wp-admin/admin-ajax.php',
            postId: postId,
            post_id: postId,
            mkcg_id: postId
        };
    }
    
    // Fix Vue/Pinia store if using lean bundle
    if (window.vueApp && window.vueApp.$pinia) {
        try {
            const store = window.vueApp.$pinia._s.get('main');
            if (store) {
                store.postId = postId;
                store.post_id = postId;
                console.log('‚úÖ Updated Vue/Pinia store with post ID');
                
                // Override the save method to include post ID
                const originalSave = store.save || store.saveToWordPress;
                if (originalSave) {
                    store.save = store.saveToWordPress = async function() {
                        console.log('üîß Save intercepted - ensuring post ID is included');
                        
                        // Ensure gmkbData has post ID
                        if (!gmkbData.postId) {
                            gmkbData.postId = postId;
                            gmkbData.post_id = postId;
                        }
                        
                        // Call original save
                        return originalSave.call(this);
                    };
                    console.log('‚úÖ Patched save method to include post ID');
                }
            }
        } catch (e) {
            console.error('‚ùå Failed to update Vue store:', e);
        }
    }
    
    // Create a global save function that works
    window.saveMediaKit = async function() {
        console.log('üíæ Saving media kit to post ID:', postId);
        
        // Get current state
        let state = null;
        
        // Try Vue/Pinia store first
        if (window.vueApp && window.vueApp.$pinia) {
            try {
                const store = window.vueApp.$pinia._s.get('main');
                if (store) {
                    state = {
                        components: store.components || {},
                        layout: store.layout || [],
                        sections: store.sections || [],
                        theme: store.theme || 'default',
                        globalSettings: store.globalSettings || {}
                    };
                    console.log('‚úÖ Got state from Vue store');
                }
            } catch (e) {
                console.error('Failed to get Vue state:', e);
            }
        }
        
        // Fallback to localStorage
        if (!state) {
            const stored = localStorage.getItem('gmkb_state');
            if (stored) {
                try {
                    state = JSON.parse(stored);
                    console.log('‚úÖ Got state from localStorage');
                } catch (e) {
                    console.error('Failed to parse localStorage:', e);
                }
            }
        }
        
        if (!state) {
            console.error('‚ùå No state to save');
            return false;
        }
        
        // Prepare form data
        const formData = new FormData();
        formData.append('action', 'gmkb_save_media_kit');
        formData.append('nonce', gmkbData.nonce || '');
        formData.append('post_id', postId);
        formData.append('state', JSON.stringify(state));
        
        console.log('üì§ Sending save request...');
        console.log('   Post ID:', postId);
        console.log('   Components:', Object.keys(state.components).length);
        console.log('   Theme:', state.theme);
        
        try {
            const response = await fetch(gmkbData.ajaxUrl || '/wp-admin/admin-ajax.php', {
                method: 'POST',
                credentials: 'same-origin',
                body: formData
            });
            
            const text = await response.text();
            
            try {
                const data = JSON.parse(text);
                if (data.success) {
                    console.log('‚úÖ Save successful!', data.data);
                    
                    // Show success message
                    if (window.vueApp && window.vueApp.$toast) {
                        window.vueApp.$toast.success('Media kit saved successfully!');
                    } else {
                        alert('Media kit saved successfully!');
                    }
                    
                    return true;
                } else {
                    console.error('‚ùå Save failed:', data.data);
                    alert('Save failed: ' + (data.data || 'Unknown error'));
                    return false;
                }
            } catch (e) {
                console.error('‚ùå Invalid response from server:', text);
                
                // Check for PHP errors
                if (text.includes('Fatal error')) {
                    alert('Server error: PHP Fatal Error. Check server logs.');
                } else if (text.includes('Warning')) {
                    alert('Server warning detected. Save may have failed.');
                } else {
                    alert('Server returned invalid response. Check console.');
                }
                
                return false;
            }
        } catch (error) {
            console.error('‚ùå Network error:', error);
            alert('Network error: ' + error.message);
            return false;
        }
    };
    
    console.log('‚úÖ Save fix applied successfully!');
    console.log('');
    console.log('You can now:');
    console.log('1. Click the Save button (it should work now)');
    console.log('2. Or run: saveMediaKit() to save manually');
    console.log('');
    console.log('Post ID set to:', postId);
    
})();