/**\n * Topics Component Debug Script\n * Use this in browser console to diagnose loading issues\n * \n * Usage: Copy and paste this into browser console when Topics are stuck loading\n */\n\nfunction diagnoseTopicsLoading() {\n    console.log('üîç === TOPICS LOADING DIAGNOSTICS ===');\n    \n    // Check if core dependencies are loaded\n    console.log('\\nüìã DEPENDENCY CHECK:');\n    console.log('- topicsStateManager:', !!window.topicsStateManager);\n    console.log('- topicsComponentManager:', !!window.topicsComponentManager);\n    console.log('- guestifyData:', !!window.guestifyData);\n    console.log('- guestifyMediaKit:', !!window.guestifyMediaKit);\n    \n    // Check AJAX data availability\n    console.log('\\nüåê AJAX CONFIGURATION:');\n    const ajaxUrl = window.guestifyData?.ajaxUrl || window.guestifyMediaKit?.ajaxUrl;\n    const nonce = window.guestifyData?.nonce || window.guestifyMediaKit?.nonce;\n    const postId = window.guestifyData?.postId || window.guestifyMediaKit?.postId;\n    \n    console.log('- AJAX URL:', ajaxUrl || 'MISSING ‚ùå');\n    console.log('- Nonce:', nonce ? nonce.substring(0, 10) + '...' : 'MISSING ‚ùå');\n    console.log('- Post ID:', postId || 'MISSING ‚ùå');\n    \n    // Check DOM elements\n    console.log('\\nüé® DOM ELEMENTS:');\n    const topicsElements = document.querySelectorAll('.topics-component, [data-component=\"topics\"]');\n    console.log('- Topics components found:', topicsElements.length);\n    \n    topicsElements.forEach((element, index) => {\n        console.log(`  Component ${index}:`, {\n            id: element.dataset.componentId,\n            initialized: element.dataset.componentInitialized,\n            postId: element.dataset.postId,\n            hasContainer: !!element.querySelector('.topics-container')\n        });\n    });\n    \n    // Check state manager status\n    if (window.topicsStateManager) {\n        console.log('\\nüìä STATE MANAGER STATUS:');\n        const stats = window.topicsStateManager.getStats();\n        console.log('- Current topics:', window.topicsStateManager.getTopics());\n        console.log('- Stats:', stats);\n        console.log('- Post ID:', window.topicsStateManager.postId);\n        console.log('- Pending changes:', window.topicsStateManager.hasPendingChanges());\n    }\n    \n    // Test AJAX connectivity\n    console.log('\\nüîå AJAX CONNECTIVITY TEST:');\n    if (ajaxUrl && nonce && postId) {\n        console.log('Testing AJAX connection...');\n        \n        const formData = new FormData();\n        formData.append('action', 'load_stored_topics');\n        formData.append('post_id', postId);\n        formData.append('nonce', nonce);\n        \n        fetch(ajaxUrl, {\n            method: 'POST',\n            body: formData,\n            credentials: 'same-origin'\n        })\n        .then(response => {\n            console.log('- AJAX Response status:', response.status, response.statusText);\n            return response.json();\n        })\n        .then(data => {\n            console.log('- AJAX Response data:', data);\n            if (data.success) {\n                console.log('‚úÖ AJAX connection working!');\n            } else {\n                console.log('‚ùå AJAX returned error:', data.data?.message);\n            }\n        })\n        .catch(error => {\n            console.log('‚ùå AJAX request failed:', error);\n        });\n    } else {\n        console.log('‚ùå Cannot test AJAX - missing required data');\n    }\n    \n    console.log('\\nüîç === DIAGNOSTIC COMPLETE ===');\n    \n    // Provide recommendations\n    console.log('\\nüí° RECOMMENDATIONS:');\n    if (!ajaxUrl) console.log('‚ùå AJAX URL missing - check script enqueuing');\n    if (!nonce) console.log('‚ùå Security nonce missing - check AJAX data localization');\n    if (!postId) console.log('‚ùå Post ID missing - check URL parameters or AJAX data');\n    if (topicsElements.length === 0) console.log('‚ùå No topics components found - check HTML structure');\n    \n    return {\n        ajaxUrl,\n        nonce: nonce ? nonce.substring(0, 10) + '...' : null,\n        postId,\n        componentsFound: topicsElements.length,\n        stateManagerAvailable: !!window.topicsStateManager\n    };\n}\n\n// Auto-run diagnostics\nconsole.log('üöÄ Topics Debug Script Loaded');\nconsole.log('üí° Run diagnoseTopicsLoading() to check for issues');\n\n// Make function globally available\nwindow.diagnoseTopicsLoading = diagnoseTopicsLoading;