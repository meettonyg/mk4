/**
 * Vue Save Patch
 * Fixes the save method in the Vue/Pinia store to use our reliable SaveService
 * This runs after the Vue app initializes
 */

(function() {
    'use strict';
    
    let patchAttempts = 0;
    const maxAttempts = 10;
    
    function patchVueSave() {
        patchAttempts++;
        
        // Check if Vue app exists
        if (!window.vueApp || !window.vueApp.$pinia) {
            if (patchAttempts < maxAttempts) {
                // Try again in 500ms
                setTimeout(patchVueSave, 500);
            } else {
                console.warn('Vue Save Patch: Vue app not found after', maxAttempts, 'attempts');
            }
            return;
        }
        
        try {
            // Get the main store
            const store = window.vueApp.$pinia._s.get('main');
            
            if (!store) {
                console.warn('Vue Save Patch: Main store not found');
                return;
            }
            
            // Check if SaveService is available
            if (!window.GMKB || !window.GMKB.SaveService) {
                console.error('Vue Save Patch: SaveService not available');
                return;
            }
            
            // Store original save method for debugging
            const originalSave = store.save;
            const originalSaveToWordPress = store.saveToWordPress;
            
            // Create improved save method
            const improvedSave = async function() {
                console.log('üì§ Vue Save: Using patched save method');
                
                try {
                    // Get state from store
                    const state = {
                        components: store.components || {},
                        layout: store.layout || [],
                        sections: store.sections || [],
                        theme: store.theme || 'default',
                        themeSettings: store.themeSettings || [],
                        globalSettings: store.globalSettings || {}
                    };
                    
                    // Use our reliable SaveService
                    const result = await window.GMKB.SaveService.save(state);
                    
                    // Update store's lastSaveTime if it has one
                    if (store.lastSaveTime !== undefined) {
                        store.lastSaveTime = Date.now();
                    }
                    
                    return result;
                    
                } catch (error) {
                    console.error('‚ùå Vue Save: Failed', error);
                    
                    // Try to show error in Vue's toast if available
                    if (window.vueApp.$toast) {
                        window.vueApp.$toast.error('Save failed: ' + error.message);
                    }
                    
                    throw error;
                }
            };
            
            // Patch both save methods
            store.save = improvedSave;
            store.saveToWordPress = improvedSave;
            
            // Also patch any save method on the store's $patch
            if (store.$patch) {
                const originalPatch = store.$patch;
                store.$patch = function(partialState) {
                    // Call original patch
                    const result = originalPatch.call(this, partialState);
                    
                    // Trigger auto-save after patch if configured
                    if (window.GMKB.SaveService.autoSaveEnabled) {
                        // Debounce auto-save
                        clearTimeout(store._autoSaveTimeout);
                        store._autoSaveTimeout = setTimeout(() => {
                            improvedSave().catch(err => {
                                console.warn('Auto-save after patch failed:', err);
                            });
                        }, 5000); // 5 second debounce
                    }
                    
                    return result;
                };
            }
            
            console.log('‚úÖ Vue Save Patch: Successfully patched save methods');
            console.log('   Original save:', typeof originalSave);
            console.log('   Original saveToWordPress:', typeof originalSaveToWordPress);
            console.log('   New save method: Enhanced with SaveService');
            
            // Test the patched save
            console.log('üß™ Testing patched save method...');
            store.save().then(() => {
                console.log('‚úÖ Vue Save Patch: Test save successful!');
            }).catch(err => {
                console.warn('‚ö†Ô∏è Vue Save Patch: Test save failed:', err.message);
            });
            
        } catch (error) {
            console.error('Vue Save Patch: Error during patching:', error);
        }
    }
    
    // Start patching process
    console.log('üîß Vue Save Patch: Starting patch process...');
    
    // Try immediately in case Vue is already loaded
    if (window.vueApp) {
        patchVueSave();
    } else {
        // Wait for Vue to load
        setTimeout(patchVueSave, 1000);
    }
    
    // Also listen for a custom event in case Vue dispatches one
    document.addEventListener('gmkb:vue-ready', patchVueSave);
    
})();