// EMERGENCY FIX: Manual diagnostic and setup for topics preview sync\n// Run this in console to debug and manually fix the sync issue\n\nconst debugTopicsDOM = function() {\n    console.group('üîç TOPICS DOM INVESTIGATION');\n    \n    // Find the topics component\n    const topicsComponent = document.querySelector('[data-component=\"topics\"]');\n    console.log('Topics component found:', topicsComponent);\n    \n    if (topicsComponent) {\n        console.log('Topics component HTML:');\n        console.log(topicsComponent.outerHTML);\n        \n        // Look for ALL possible topic elements\n        const possibleSelectors = [\n            '.topic-title',\n            '.topic-content .topic-title', \n            '.topic-item .topic-title',\n            'h2', 'h3', 'h4',\n            '.topic', '.topic-text',\n            'li', 'p',\n            '[contenteditable]',\n            '*[class*=\"topic\"]'\n        ];\n        \n        console.log('Searching for topic elements with different selectors:');\n        possibleSelectors.forEach(selector => {\n            const elements = topicsComponent.querySelectorAll(selector);\n            if (elements.length > 0) {\n                console.log(`‚úÖ Found ${elements.length} elements with: ${selector}`);\n                elements.forEach((el, i) => {\n                    console.log(`  Element ${i + 1}:`, el, `Text: \"${el.textContent.trim()}\"`);\n                });\n            } else {\n                console.log(`‚ùå No elements found with: ${selector}`);\n            }\n        });\n        \n        // Show ALL child elements\n        console.log('\\nAll child elements in topics component:');\n        const allChildren = topicsComponent.querySelectorAll('*');\n        allChildren.forEach((child, i) => {\n            if (child.textContent && child.textContent.trim()) {\n                console.log(`Child ${i + 1}:`, child.tagName, child.className, `\"${child.textContent.trim().substring(0, 50)}\"`);\n            }\n        });\n    }\n    \n    console.groupEnd();\n};\n\nconst setupManualSync = function() {\n    console.log('üîß MANUAL SETUP: Setting up preview-to-sidebar sync...');\n    \n    const topicsComponent = document.querySelector('[data-component=\"topics\"]');\n    if (!topicsComponent) {\n        console.log('‚ùå No topics component found');\n        return;\n    }\n    \n    // Try multiple selectors to find editable elements\n    const selectors = [\n        '.topic-title',\n        'h2', 'h3', 'h4', \n        'li',\n        'p',\n        '.topic',\n        '[contenteditable]'\n    ];\n    \n    let editableElements = [];\n    \n    for (const selector of selectors) {\n        const elements = topicsComponent.querySelectorAll(selector);\n        if (elements.length > 0) {\n            console.log(`‚úÖ Using selector: ${selector} (found ${elements.length} elements)`);\n            editableElements = Array.from(elements);\n            break;\n        }\n    }\n    \n    if (editableElements.length === 0) {\n        console.log('‚ùå No suitable elements found for sync');\n        return;\n    }\n    \n    // Setup sync for each element\n    editableElements.forEach((element, index) => {\n        const topicNumber = index + 1;\n        if (topicNumber > 5) return;\n        \n        console.log(`üîß Setting up sync for topic ${topicNumber}:`, element);\n        \n        // Make contenteditable\n        element.setAttribute('contenteditable', 'true');\n        element.setAttribute('data-topic-number', topicNumber);\n        element.setAttribute('data-manual-sync', 'true');\n        \n        // Remove existing listeners\n        const newElement = element.cloneNode(true);\n        element.parentNode.replaceChild(newElement, element);\n        \n        // Add sync handlers\n        const syncToSidebar = (eventType) => {\n            const value = newElement.textContent.trim();\n            console.log(`üîÑ MANUAL SYNC [${eventType}]: Topic ${topicNumber} = \"${value}\"`);\n            \n            // Find sidebar input\n            const sidebarInput = document.querySelector(`#topics-list .topics-sidebar__topic-item:nth-child(${topicNumber}) .topics-sidebar__topic-input`);\n            if (sidebarInput && sidebarInput.value !== value) {\n                sidebarInput.value = value;\n                \n                // Trigger character counter update\n                if (window.TopicsTemplate && window.TopicsTemplate.updateCounters) {\n                    window.TopicsTemplate.updateCounters();\n                }\n                \n                // Visual feedback\n                sidebarInput.style.borderColor = '#4caf50';\n                sidebarInput.style.borderWidth = '2px';\n                setTimeout(() => {\n                    sidebarInput.style.borderColor = '';\n                    sidebarInput.style.borderWidth = '';\n                }, 1000);\n                \n                console.log(`‚úÖ Updated sidebar input for topic ${topicNumber}`);\n            } else {\n                console.log(`‚ö†Ô∏è Could not find sidebar input for topic ${topicNumber}`);\n            }\n        };\n        \n        // Add event listeners\n        newElement.addEventListener('blur', () => syncToSidebar('blur'));\n        newElement.addEventListener('focusout', () => syncToSidebar('focusout'));\n        newElement.addEventListener('keydown', (e) => {\n            if (e.key === 'Enter') {\n                e.preventDefault();\n                newElement.blur();\n            }\n        });\n        \n        console.log(`‚úÖ Manual sync setup complete for topic ${topicNumber}`);\n    });\n    \n    console.log('‚úÖ MANUAL SETUP COMPLETE - Try editing topics in preview now!');\n};\n\n// Run diagnostic\ndebugTopicsDOM();\n\n// Offer manual setup\nconsole.log('\\nüõ†Ô∏è To manually setup sync, run: setupManualSync()');\n\n// Make functions globally available\nwindow.debugTopicsDOM = debugTopicsDOM;\nwindow.setupManualSync = setupManualSync;\n\nconsole.log('\\nüéØ EMERGENCY DEBUG LOADED');\nconsole.log('Commands available:');\nconsole.log('- debugTopicsDOM() : Investigate DOM structure');\nconsole.log('- setupManualSync() : Force setup preview sync');\n