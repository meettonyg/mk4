<?php
/**
 * AJAX Output Protection
 * 
 * ROOT FIX: Prevents ANY output during AJAX requests that could corrupt JSON responses
 * This addresses the issue where debug scripts are being injected into AJAX responses
 */

if (!defined('ABSPATH')) {
    exit;
}

class GMKB_Ajax_Output_Protection {
    
    private static $instance = null;
    
    public static function get_instance() {
        if (null === self::$instance) {
            self::$instance = new self();
        }
        return self::$instance;
    }
    
    private function __construct() {
        // Hook very early to catch any output attempts
        add_action('plugins_loaded', array($this, 'setup_ajax_protection'), 1);
        add_action('init', array($this, 'protect_ajax_requests'), 1);
    }
    
    /**
     * Setup protection for AJAX requests
     */
    public function setup_ajax_protection() {
        // Only run protection during AJAX requests
        if (!defined('DOING_AJAX') || !DOING_AJAX) {
            return;
        }
        
        // Check if this is a GMKB AJAX request
        $action = isset($_POST['action']) ? $_POST['action'] : (isset($_GET['action']) ? $_GET['action'] : '');
        
        // List of GMKB AJAX actions to protect
        $protected_actions = array(
            'gmkb_save_media_kit',
            'gmkb_load_media_kit',
            'gmkb_get_available_components',
            'gmkb_get_themes',
            'guestify_render_component',
            'guestify_save_media_kit',
            'guestify_load_media_kit',
            'gmkb_inspect_state' // Even this should return clean JSON
        );
        
        if (in_array($action, $protected_actions)) {
            // Start output buffering to catch any unwanted output
            ob_start(array($this, 'clean_ajax_output'));
            
            // Remove hooks that might inject scripts
            $this->remove_output_hooks();
            
            // Prevent any script injections
            add_action('wp_footer', '__return_false', 1);
            add_action('admin_footer', '__return_false', 1);
            add_action('shutdown', array($this, 'ensure_clean_shutdown'), 999);
        }
    }
    
    /**
     * Additional protection during init
     */
    public function protect_ajax_requests() {
        if (!defined('DOING_AJAX') || !DOING_AJAX) {
            return;
        }
        
        // Disable any debug output during AJAX
        if (defined('WP_DEBUG_DISPLAY')) {
            ini_set('display_errors', 0);
        }
    }
    
    /**
     * Clean any non-JSON output from buffer
     */
    public function clean_ajax_output($buffer) {
        // If buffer starts with valid JSON, return it
        $trimmed = trim($buffer);
        
        // Check if it's valid JSON
        if ($this->is_json($trimmed)) {
            return $trimmed;
        }
        
        // Try to extract JSON from the buffer
        // Look for JSON patterns
        if (preg_match('/\{["\']success["\']:\s*(true|false).*\}/s', $buffer, $matches)) {
            return $matches[0];
        }
        
        // If we can't find valid JSON, log the issue
        if (defined('WP_DEBUG') && WP_DEBUG) {
            error_log('GMKB AJAX Protection: Non-JSON output detected and removed: ' . substr($buffer, 0, 200));
        }
        
        // Return empty JSON error
        return json_encode(array(
            'success' => false,
            'data' => 'Invalid response format'
        ));
    }
    
    /**
     * Check if a string is valid JSON
     */
    private function is_json($string) {
        if (!is_string($string)) {
            return false;
        }
        
        json_decode($string);
        return (json_last_error() === JSON_ERROR_NONE);
    }
    
    /**
     * Remove hooks that might inject output
     */
    private function remove_output_hooks() {
        // Remove common hooks that inject scripts/styles
        remove_all_actions('wp_print_scripts');
        remove_all_actions('wp_print_styles');
        remove_all_actions('wp_print_footer_scripts');
        remove_all_actions('admin_print_scripts');
        remove_all_actions('admin_print_styles');
        remove_all_actions('admin_print_footer_scripts');
        
        // Remove debug bar and query monitor hooks
        remove_all_actions('wp_footer', 99999);
        remove_all_actions('admin_footer', 99999);
        
        // Prevent any inline script additions
        add_filter('print_scripts_array', '__return_empty_array', 999);
        add_filter('print_styles_array', '__return_empty_array', 999);
    }
    
    /**
     * Ensure clean shutdown for AJAX requests
     */
    public function ensure_clean_shutdown() {
        // Clear any remaining output buffers
        while (ob_get_level() > 0) {
            ob_end_clean();
        }
        
        // Prevent any further output
        exit;
    }
}

// Initialize the protection
GMKB_Ajax_Output_Protection::get_instance();
