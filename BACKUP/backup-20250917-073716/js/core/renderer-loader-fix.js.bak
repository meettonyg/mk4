/**
 * Temporary fix to ensure the component renderer loads
 * This addresses the dependency chain issue where the renderer isn't loading
 */
(function() {
    'use strict';
    
    console.log('üîß Renderer loader fix initializing...');
    
    // Check if renderer is already loaded
    if (window.enhancedComponentRenderer) {
        console.log('‚úÖ Renderer already loaded');
        return;
    }
    
    // Function to load the renderer
    const loadRenderer = () => {
        if (window.enhancedComponentRenderer) {
            return; // Already loaded
        }
        
        // Check if dependencies are ready
        if (!window.structuredLogger || !window.enhancedStateManager) {
            console.log('‚è≥ Renderer dependencies not ready yet');
            return;
        }
        
        console.log('üì¶ Loading component renderer script...');
        
        // Load the renderer script
        const script = document.createElement('script');
        script.src = window.gmkbData.pluginUrl + 'js/core/enhanced-component-renderer-simplified.js';
        script.onload = () => {
            console.log('‚úÖ Renderer script loaded successfully');
        };
        script.onerror = () => {
            console.error('‚ùå Failed to load renderer script');
        };
        document.head.appendChild(script);
    };
    
    // Try to load immediately if dependencies are ready
    if (window.structuredLogger && window.enhancedStateManager) {
        loadRenderer();
    } else {
        // Wait for core systems to be ready
        document.addEventListener('gmkb:core-systems-ready', loadRenderer);
        document.addEventListener('gmkb:state-manager-ready', loadRenderer);
        
        // Also try after DOM ready
        if (document.readyState === 'loading') {
            document.addEventListener('DOMContentLoaded', loadRenderer);
        } else {
            setTimeout(loadRenderer, 100);
        }
    }
})();
