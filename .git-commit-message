CRITICAL FIX: Resolve "APIService not available" error

ROOT CAUSE:
- Race condition where addComponent() → _trackChange() → autoSave() → save()
  was called before store initialization completed
- APIService was only created during initialize(), causing save() to fail
- Error: "APIService not available" when auto-save triggered too early

THE FIX:
1. Import APIService at top of mediaKit store
2. Add apiService to Pinia state (initialized as null)  
3. Create APIService instance early in initialize() before any async operations
4. Use store's apiService instance consistently (not window.gmkbAPI)
5. Add initialization guard to _performAutoSave() to prevent premature saves
6. Lazy-create APIService in save() if somehow missing (defensive programming)
7. Update loadFromAPI() and saveToAPI() to use store's apiService instance

ARCHITECTURE PRINCIPLE FOLLOWED:
Ensure dependencies exist before allowing operations that need them.
No polling, no waiting - proper initialization sequence.

CHECKLIST VERIFIED:
✅ No Polling - uses isInitialized flag check
✅ Event-Driven - proper initialization sequence  
✅ Dependency-Awareness - checks isInitialized before operations
✅ No Global Object Sniffing - uses this.apiService from state
✅ Root Cause Fix - addresses missing APIService at initialization
✅ Simplicity First - simple guards, no complex logic
✅ Code Reduction - reuses single APIService instance
✅ Centralized State - APIService stored in Pinia state
✅ Graceful Failure - guards prevent errors before ready
✅ Diagnostic Logging - clear console logs

FILES CHANGED:
- src/stores/mediaKit.js (8 targeted edits)
- CRITICAL-FIX-APISERVICE.md (documentation)

TESTING:
- Verify no "APIService not available" error in console
- Verify components can be added immediately after page load
- Verify auto-save works after initialization
- Verify manual save works
