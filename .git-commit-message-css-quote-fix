fix: Strip quotes from CSS variable values to prevent invalid CSS

PROBLEM:
CSS variable values were being stored in database with JSON encoding,
which wrapped values in quotes. When output to CSS, these quotes made
the CSS invalid and browsers ignored the values.

Example of the issue:
  --gmkb-color-background: "#8f8494";  /* ❌ Invalid - quotes break CSS */
  --gmkb-color-background: #8f8494;    /* ✅ Valid */

ROOT CAUSE:
When PHP reads JSON from WordPress database, string values like "#8f8494"
retain their quotes. These were being passed directly to CSS output without
being stripped.

SOLUTION:
Added quote-stripping logic at every point where CSS values are output:

1. map_theme_customizations_to_css_variables() - Theme customizations
   - Colors: Strip quotes from color values
   - Fonts: Strip quotes from font family names
   - Effects: Strip quotes from border radius and box shadow

2. inject_theme_css_variables() - Base theme variables
   - Colors: Strip quotes from base theme colors
   - Fonts: Strip quotes from font families
   - Border Radius: Strip quotes from radius values

3. build_token_overrides() - Component-level CSS variables
   - Background Color: Strip quotes
   - Typography Color: Strip quotes
   - Border Color: Strip quotes

IMPLEMENTATION:
All value cleaning follows this pattern:
  $clean_value = is_string($value) ? trim($value, '\"\' ') : $value;

This ensures:
- Type safety (only trim strings)
- Removes both single and double quotes
- Handles non-string values gracefully

TESTING:
1. Set custom background color in Theme Customizer
2. Save and view frontend
3. Check console: getComputedStyle(document.documentElement).getPropertyValue('--gmkb-color-background')
4. Value should have NO quotes and should apply correctly

IMPACT:
- Scope: Frontend CSS variable output only
- Risk: Low - only affects value cleaning
- Backwards Compatible: Yes
- Performance: Negligible

FILES MODIFIED:
- includes/class-gmkb-frontend-display.php

CHECKLIST:
✅ No polling/timeouts
✅ Root cause fixed
✅ Simplest solution
✅ Type-safe implementation
✅ Console debugging maintained
✅ No state management changes
✅ WordPress integration unchanged
