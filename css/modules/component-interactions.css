/**
 * Component Interaction Styles
 * Selection, controls, and interaction states
 */

/* Component selection and interaction styles */
.component-selected {
    outline: 2px solid #3b82f6 !important;
    outline-offset: 2px;
}

/* GEMINI FIX: Component Selection and Element Controls Styles */
/* Selected component highlighting */
[data-component-id].selected {
    outline: 2px solid #0ea5e9;
    outline-offset: 2px;
    background: rgba(14, 165, 233, 0.05);
    position: relative;
    z-index: 10;
}

/* ROOT FIX: REMOVED OLD CONTROL SYSTEM - .element-controls, .control-btn */
/* This eliminates the competing control system that caused duplicates */

/* Click feedback for components */
[data-component-id]:hover {
    cursor: pointer;
}

[data-component-id]:active {
    transform: scale(0.998);
}

/* Editable elements */
.editable-element {
    position: relative;
}

[contenteditable="true"]:focus {
    outline: 2px solid #3b82f6;
    outline-offset: 2px;
    border-radius: 4px;
}

[contenteditable="true"]:hover {
    background: rgba(59, 130, 246, 0.05);
    border-radius: 4px;
}

/* Component meta states */
[data-component-id].is-deleting {
    opacity: 0.5;
    pointer-events: none;
    position: relative;
}

[data-component-id].is-deleting::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(239, 68, 68, 0.1);
    z-index: 1;
}

[data-component-id].is-moving {
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
    transform: scale(1.02);
    z-index: 10;
}

[data-component-id].is-dirty {
    position: relative;
}

[data-component-id].is-dirty::before {
    content: '';
    position: absolute;
    top: -2px;
    left: -2px;
    right: -2px;
    bottom: -2px;
    border: 2px solid rgba(59, 130, 246, 0.5);
    border-radius: inherit;
    pointer-events: none;
    animation: pulse 2s ease-in-out infinite;
}

/* Component deletion states */
.component-deleting {
    opacity: 0.5 !important;
    pointer-events: none !important;
    transition: opacity 0.2s ease;
}

.component-deleting .control-btn {
    pointer-events: none !important;
    cursor: not-allowed !important;
    opacity: 0.5 !important;
}

.component-removing {
    animation: fadeOut 0.3s ease forwards;
}

@keyframes fadeOut {
    from {
        opacity: 1;
        transform: scale(1);
    }
    to {
        opacity: 0;
        transform: scale(0.95);
    }
}

/* Prevent control button interaction during actions */
.control-btn[disabled] {
    pointer-events: none !important;
    cursor: not-allowed !important;
    opacity: 0.5 !important;
}

/* Visual feedback for pending actions */
.control-btn:active {
    transform: scale(0.95);
}

/* Ensure control buttons can't be clicked multiple times rapidly */
.control-btn[data-listener-attached] {
    user-select: none;
}

/* Enhanced Component Animation States */

/* Component added animation */
.component-added {
    animation: slideIn 0.3s ease-out;
}

@keyframes slideIn {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* Component moving state */
.component-moving {
    transition: transform 0.3s ease;
    opacity: 0.8;
}

/* Component reordered animation */
.component-reordered {
    animation: bounce 0.3s ease;
}

@keyframes bounce {
    0%, 100% {
        transform: translateY(0);
    }
    50% {
        transform: translateY(-5px);
    }
}

/* Smooth transitions for all component state changes */
[data-component-id] {
    transition: opacity 0.2s ease, transform 0.2s ease, box-shadow 0.2s ease;
}

@keyframes pulse {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.5; }
}

/* ROOT FIX: Enhanced Component Controls Styles */
/* Component controls overlay - referenced in attachComponentHandlers() */
.component-controls {
    position: absolute;
    top: 8px;
    right: 8px;
    opacity: 0;
    visibility: hidden;
    transform: translateY(-4px);
    transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
    z-index: 15;
    pointer-events: auto;
}

/* Enhanced visibility state */
.component-controls--visible {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
}

/* Show controls on component hover */
.media-kit-component:hover .component-controls,
[data-component-id]:hover .component-controls {
    opacity: 1 !important;
    visibility: visible !important;
    transform: translateY(0);
}

/* ROOT FIX: Dynamic Controls Manager CSS */
/* Support for ComponentControlsManager dynamic controls */
.component-controls--dynamic {
    position: absolute;
    top: 8px;
    right: 8px;
    opacity: 0;
    visibility: hidden;
    transition: all 0.2s ease;
    z-index: 100;
    pointer-events: none;
}

/* Show dynamic controls on hover */
[data-component-id]:hover .component-controls--dynamic {
    opacity: 1 !important;
    visibility: visible !important;
    pointer-events: all !important;
}

/* Component controls toolbar - modern glass design */
.component-controls__toolbar,
.component-controls__toolbar--dynamic {
    display: flex;
    align-items: center;
    gap: 4px;
    background: rgba(0, 0, 0, 0.8);
    backdrop-filter: blur(8px);
    border-radius: 6px;
    padding: 4px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
}

/* Dark theme support */
@media (prefers-color-scheme: dark) {
    .component-controls__toolbar {
        background: rgba(30, 30, 30, 0.95);
        border-color: rgba(255, 255, 255, 0.1);
        box-shadow: 
            0 4px 6px -1px rgba(0, 0, 0, 0.3),
            0 2px 4px -1px rgba(0, 0, 0, 0.2),
            0 0 0 1px rgba(255, 255, 255, 0.1) inset;
    }
}

/* Individual component control buttons */
.component-control {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 32px;
    height: 32px;
    background: transparent;
    border: none;
    border-radius: 6px;
    color: #64748b;
    cursor: pointer;
    transition: all 0.15s cubic-bezier(0.4, 0, 0.2, 1);
    font-size: 0;
    padding: 0;
    position: relative;
    overflow: hidden;
}

/* ROOT FIX: Support for ComponentControlsManager button classes */
.component-control,
.component-control--edit,
.component-control--move-up,
.component-control--move-down, 
.component-control--duplicate,
.component-control--delete {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 28px;
    height: 28px;
    border: none;
    background: transparent;
    color: white;
    cursor: pointer;
    border-radius: 4px;
    transition: all 0.2s ease;
    position: relative;
}

.component-control:hover,
.component-control--edit:hover,
.component-control--move-up:hover,
.component-control--move-down:hover,
.component-control--duplicate:hover,
.component-control--delete:hover {
    background: rgba(255, 255, 255, 0.1);
    transform: scale(1.05);
}

.component-control:active {
    transform: scale(0.95);
}

/* Move group specific styling */
.component-control-group,
.component-control-group--move {
    display: flex;
    flex-direction: column;
    gap: 2px;
}

.component-control-group .component-control,
.component-control-group--move .component-control {
    width: 20px;
    height: 20px;
}

.component-control:before {
    content: '';
    position: absolute;
    inset: 0;
    background: currentColor;
    opacity: 0;
    transition: opacity 0.15s ease;
    border-radius: inherit;
}

.component-control:hover:before {
    opacity: 0.08;
}

.component-control:active {
    transform: scale(0.95);
}

.component-control:disabled {
    opacity: 0.4;
    cursor: not-allowed;
    transform: none !important;
}

/* SVG icons styling */
.component-control svg {
    position: relative;
    z-index: 1;
    transition: all 0.15s ease;
    width: 14px;
    height: 14px;
    stroke: currentColor;
    fill: none;
    stroke-width: 2;
}

/* ROOT FIX: Ensure ComponentControlsManager SVG icons are visible */
.component-control svg,
.component-control--edit svg,
.component-control--move-up svg,
.component-control--move-down svg,
.component-control--duplicate svg,
.component-control--delete svg {
    width: 14px;
    height: 14px;
    stroke: currentColor;
    fill: none;
    stroke-width: 2;
    color: inherit;
    opacity: 1;
    visibility: visible;
}

/* Smaller icons for move controls */
.component-control-group svg,
.component-control-group--move svg {
    width: 12px;
    height: 12px;
}

/* Specific control button colors and hover states */
.component-control--edit {
    color: #3b82f6;
}

.component-control--edit:hover {
    color: #2563eb;
    background: rgba(59, 130, 246, 0.1);
}

.component-control--duplicate {
    color: #10b981;
}

.component-control--duplicate:hover {
    color: #059669;
    background: rgba(16, 185, 129, 0.1);
}

.component-control--delete {
    color: #ef4444;
}

.component-control--delete:hover {
    color: #dc2626;
    background: rgba(239, 68, 68, 0.1);
}

/* Move controls group */
.component-control-group {
    display: flex;
    flex-direction: column;
    gap: 1px;
    background: rgba(0, 0, 0, 0.04);
    border-radius: 4px;
    padding: 1px;
}

.component-control--move-up,
.component-control--move-down {
    width: 24px;
    height: 20px;
    color: #6366f1;
    border-radius: 3px;
}

.component-control--move-up:hover,
.component-control--move-down:hover {
    color: #4f46e5;
    background: rgba(99, 102, 241, 0.1);
}

/* Component wrapper - media-kit-component class */
.media-kit-component {
    position: relative;
    margin: 20px 0;
    border-radius: 12px;
    transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
    border: 2px solid transparent;
    background: white;
    overflow: hidden;
}

.media-kit-component:hover {
    border-color: rgba(14, 165, 233, 0.2);
    box-shadow: 
        0 4px 6px -1px rgba(0, 0, 0, 0.1),
        0 2px 4px -1px rgba(0, 0, 0, 0.06),
        0 0 0 1px rgba(14, 165, 233, 0.1);
    transform: translateY(-1px);
}

/* Component moved animation */
.component-moved {
    animation: componentMoved 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

@keyframes componentMoved {
    0% {
        transform: translateY(0);
    }
    50% {
        transform: translateY(-8px);
        box-shadow: 0 8px 16px -4px rgba(14, 165, 233, 0.3);
    }
    100% {
        transform: translateY(0);
    }
}

/* Ensure components have proper spacing */
.media-kit-component + .media-kit-component {
    margin-top: 24px;
}

/* First and last component specific spacing */
.media-kit-component:first-child {
    margin-top: 16px;
}

.media-kit-component:last-child {
    margin-bottom: 16px;
}

/* Enhanced tooltips for controls */
.component-control[title]:hover::after {
    content: attr(title);
    position: absolute;
    bottom: -32px;
    left: 50%;
    transform: translateX(-50%);
    background: rgba(0, 0, 0, 0.9);
    color: white;
    padding: 4px 8px;
    border-radius: 4px;
    font-size: 12px;
    font-weight: 500;
    white-space: nowrap;
    z-index: 1000;
    animation: tooltipFadeIn 0.2s ease;
}

@keyframes tooltipFadeIn {
    from {
        opacity: 0;
        transform: translateX(-50%) translateY(4px);
    }
    to {
        opacity: 1;
        transform: translateX(-50%) translateY(0);
    }
}

/* Focus states for accessibility */
.component-control:focus-visible {
    outline: 2px solid #3b82f6;
    outline-offset: 2px;
}

/* Loading state for controls */
.component-control.loading {
    pointer-events: none;
}

.component-control.loading svg {
    animation: controlSpin 0.5s linear infinite;
}

@keyframes controlSpin {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
}

/* Modal styles for design panel */
.modal-overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.5);
    z-index: 9999;
    align-items: center;
    justify-content: center;
    display: none;
}

.modal-overlay[style*="display: flex"] {
    display: flex !important;
}

.modal-content {
    background: white;
    border-radius: 8px;
    max-width: 600px;
    width: 90%;
    max-height: 80vh;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
}

.modal-header {
    padding: 20px;
    border-bottom: 1px solid #e2e8f0;
    display: flex;
    justify-content: space-between;
    align-items: center;
    background: #f8fafc;
}

.modal-header h3 {
    font-size: 20px;
    font-weight: 600;
    color: #1e293b;
    margin: 0;
}

.modal-close {
    background: none;
    border: none;
    font-size: 24px;
    color: #64748b;
    cursor: pointer;
    padding: 0;
    width: 32px;
    height: 32px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 4px;
    transition: all 0.2s;
}

.modal-close:hover {
    background: #e2e8f0;
    color: #1e293b;
}

.modal-body {
    padding: 20px;
    overflow-y: auto;
    flex: 1;
}

.modal-footer {
    padding: 20px;
    border-top: 1px solid #e2e8f0;
    display: flex;
    justify-content: flex-end;
    gap: 12px;
    background: #f8fafc;
}

/* Design panel specific styles */
.design-panel-content {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
}

.design-panel-content h4 {
    font-size: 18px;
    font-weight: 600;
    color: #1e293b;
    margin: 0 0 16px 0;
}

.design-panel-content p {
    color: #64748b;
    line-height: 1.5;
    margin: 0 0 16px 0;
}

.form-group {
    margin-bottom: 16px;
}

.form-group label {
    display: block;
    font-weight: 500;
    color: #374151;
    margin-bottom: 4px;
    font-size: 14px;
}

.form-input {
    width: 100%;
    padding: 8px 12px;
    border: 1px solid #d1d5db;
    border-radius: 6px;
    font-size: 14px;
    transition: border-color 0.2s;
}

.form-input:focus {
    outline: none;
    border-color: #0ea5e9;
    box-shadow: 0 0 0 3px rgba(14, 165, 233, 0.1);
}

.form-input[readonly] {
    background: #f9fafb;
    color: #6b7280;
}

/* Button styles for modal */
.btn {
    display: inline-flex;
    align-items: center;
    gap: 8px;
    padding: 8px 16px;
    border-radius: 6px;
    font-size: 14px;
    font-weight: 500;
    border: 1px solid transparent;
    cursor: pointer;
    transition: all 0.2s;
    text-decoration: none;
    line-height: 1;
}

.btn--primary {
    background: #0ea5e9;
    color: white;
    border-color: #0ea5e9;
}

.btn--primary:hover {
    background: #0284c7;
    border-color: #0284c7;
}

.btn--secondary {
    background: white;
    color: #374151;
    border-color: #d1d5db;
}

.btn--secondary:hover {
    background: #f9fafb;
    border-color: #9ca3af;
}
